[{"path":[]},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement souad.guemghar@bl.ch. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://afds-bl.github.io/chensus/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://afds-bl.github.io/chensus/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Thank interest contributing project! contributions welcome, including bug reports, feature suggestions, documentation improvements, code contributions.","code":""},{"path":"https://afds-bl.github.io/chensus/CONTRIBUTING.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Contributing","text":"submitting new bug feature, please check open issues avoid duplicates. Use provided issue templates bug reports feature requests. Fork repository. Create branch changes. Make changes ensure code follows project’s style guidelines. Test changes update documentation needed. Commit changes clear descriptive message. Push branch fork. Open pull request main branch. Follow tidyverse style guide R code. Keep commits focused concise. Update documentation examples changes affect usage. Ensure tests pass submitting pull request. Add new tests new features bug fixes.","code":""},{"path":"https://afds-bl.github.io/chensus/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"Please note project released Contributor Code Conduct. participating project, agree abide terms.","code":""},{"path":"https://afds-bl.github.io/chensus/CONTRIBUTING.html","id":"recognition","dir":"","previous_headings":"","what":"Recognition","title":"Contributing","text":"contributors acknowledged NEWS file , appropriate, package documentation.","code":""},{"path":"https://afds-bl.github.io/chensus/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contributing","text":"questions, feel free open issue reach via email.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://afds-bl.github.io/chensus/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://afds-bl.github.io/chensus/PULL_REQUEST_TEMPLATE.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"NA","text":"Describe changes pull request makes needed.","code":""},{"path":"https://afds-bl.github.io/chensus/PULL_REQUEST_TEMPLATE.html","id":"related-issue","dir":"","previous_headings":"","what":"Related Issue","title":"NA","text":"Closes # (issue number, applicable)","code":""},{"path":"https://afds-bl.github.io/chensus/PULL_REQUEST_TEMPLATE.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist","title":"NA","text":"read CONTRIBUTING.md guidelines. performed self-review code. added tests prove fix effective feature works. made corresponding changes documentation.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/Method.html","id":"confidence-interval","dir":"Articles","previous_headings":"","what":"Confidence Interval","title":"Method","text":"confidence interval range plausible values population parameter, calculated sample data. 95% confidence interval means sampling procedure repeated many times, approximately 95% resulting intervals contain true population value. imply 95% probability true value lies within single interval; rather, reflects reliability estimation method across repeated samples.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/Method.html","id":"structural-survey","dir":"Articles","previous_headings":"","what":"Structural survey","title":"Method","text":"structural survey ( (Strukturerhebung / relevé structurel)) data, se_total() estimates: occurrences real population: sum weights sub-population interest; variance \\hat V estimate; standard deviation (\\sqrt{\\hat{V}}) estimate; confidence interval estimate significance level \\alpha: \\left[(1 - \\alpha/2)\\times 100\\right]^{\\text{th}} percentile normal distribution mean 0 standard deviation \\sqrt{\\hat{V}}. FSO provides formulas estimate populations variances structural survey French (-f-40-se_METH.pdf) German (-d-40-se_METH.pdf).","code":""},{"path":"https://afds-bl.github.io/chensus/articles/Method.html","id":"totals","dir":"Articles","previous_headings":"Structural survey","what":"Totals","title":"Method","text":"estimated populations population survey given : \\hat{N}_c = \\sum_{\\r} w_i I_c : w_i weight participant ; I_c = 1 condition(s) c true, 0 otherwise; r set participants. estimated variance given : \\hat{V}(\\hat{N}_c) = \\sum_h \\frac{m_h}{m_h - 1} \\left(1 - \\frac{m_h}{N_h}\\right) \\sum_{\\r_h} \\left(w_i I_c - \\frac{\\hat{N}_{hc}}{m_h}\\right)^2 : \\hat{N}_c estimated occurrence condition c; h designates stratum (e.g., zone); \\hat{N}_{hc} estimated occurrence conditions c stratum h; N_h total estimated population stratum h (sum weights stratum h); r_h set participants stratum h; m_h number participants stratum h. condition c, becomes: \\begin{aligned} \\sum_{\\r_h} \\left(w_i I_c - \\frac{\\hat{N}_{hc}}{m_h}\\right)^2 &= \\sum_{\\notin r_{hc}} \\left(\\frac{\\hat{N}_{hc}}{m_h}\\right)^2 + \\sum_{\\r_{hc}} \\left(w_i - \\frac{\\hat{N}_{hc}}{m_h}\\right)^2 \\\\ &= \\left(m_h - m_{hc}\\right) \\left(\\frac{\\hat{N}_{hc}}{m_h}\\right)^2 + \\sum_{\\r_{hc}} \\left(w_i - \\frac{\\hat{N}_{hc}}{m_h}\\right)^2 \\end{aligned} r_{hc} set respondents stratum h fulfill condition c, m_{hc} number respondents r_{hc}. Thus, original variance estimate equation becomes: \\hat{V}(\\hat{N}_c) = \\sum_h \\frac{m_h}{m_h - 1} \\left(1 - \\frac{m_h}{N_h}\\right) \\left[(m_h - m_{hc}) \\left(\\frac{\\hat{N}_{hc}}{m_h}\\right)^2 + \\sum_{\\r_{hc}} \\left(w_i - \\frac{\\hat{N}_{hc}}{m_h}\\right)^2\\right] confidence interval given : \\text{CI} = \\sqrt{\\hat{V}(\\hat{N}_c)} \\times \\text{qnorm}\\left(1 - \\frac{\\alpha}{2}\\right) \\alpha significance level (e.g., 0.05 95% confidence interval). se_summarise() calculates m_h, N_h, m_{hc}, \\text{} \\hat{N}_{hc}. se_total() calculates \\hat{V}(\\hat{N}_c), true occurrence survey sample confidence intervals.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/Method.html","id":"means","dir":"Articles","previous_headings":"Structural survey","what":"Means","title":"Method","text":"estimate mean continuous variable y, example average rent apartment rentnet, given weighted mean: \\bar y = \\frac{\\sum_k w_k y_k}{\\sum_k w_k} Variance \\bar y approximated total variable z : z_k = \\frac{y_k - \\bar y}{\\sum_i w_i} words: \\begin{align*} \\hat V(\\bar y) & = \\hat V(\\hat z) \\\\ & = \\sum_h \\frac{m_h}{m_h - 1}\\left(1 - \\frac{m_h}{N_h}\\right) \\sum_{\\r_h}\\left(w_i z_i - \\frac{\\hat z_h}{m_h}\\right)^2 \\\\ & = \\sum_h \\frac{m_h}{m_h - 1}\\left(1 - \\frac{m_h}{N_h}\\right) \\sum_{\\r_h}\\left(w_i z_i - \\frac{\\sum_{j \\r_h} w_j z_j}{m_h}\\right)^2 \\\\ & = \\sum_h \\frac{m_h}{m_h - 1}\\left(1 - \\frac{m_h}{N_h}\\right) \\sum_{\\r_h}\\left(w_i \\frac{y_i - \\bar y}{\\sum_{j \\r_h} w_j} - \\frac{\\sum_{j \\r_h} w_j \\left(\\frac{y_j - \\bar y}{\\sum_{k \\r_h} w_k}\\right)}{m_h}\\right)^2 \\end{align*} confidence interval given : \\text{CI} = \\sqrt{\\hat{V}(\\bar y)} \\times \\text{qnorm}(1 - \\frac{\\alpha}2) se_mean() se_prop() calculate \\bar y, \\hat{V}(\\bar y), frequency survey sample confidence intervals.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/Method.html","id":"mobility-and-transport-survey","dir":"Articles","previous_headings":"","what":"Mobility and Transport Survey","title":"Method","text":"survey (MZMV/MRMT) data, mzmv_mean() estimates: average occurrence real population: weighted mean sub-population interest; confidence interval estimate significance level \\alpha, mzmv_mean_map() additionally uses grouping variables. Note one can simply use mzmv_mean() estimate proportions means, shown . FSO provides formulas estimate variances MZMV/MRMT.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/Method.html","id":"means-1","dir":"Articles","previous_headings":"Mobility and Transport Survey","what":"Means","title":"Method","text":"estimated mean : \\hat{Y} = \\frac{1}{\\sum\\limits_{\\r} w_i}\\sum_{\\r} w_i y_i : w_i weight participant ; y_i response participant ; r set respondents. confidence interval estimated mean : \\begin{aligned}\\text{CI} &= 1.14\\times Z_{\\alpha}\\frac{\\hat{\\sigma}_{y}}{\\sqrt{n}}\\\\ &= 1.14 \\times \\frac{\\hat{\\sigma}_{y}}{\\sqrt{n}} \\times \\text{qnorm}(1 - \\frac{\\alpha}2) \\end{aligned} : 1.14 correction factor; \\alpha significance level, example 0.05 confidence interval 95%; Z_{\\alpha} Z-value desired confidence level (Z_{0.05} = 1.96 double-sided 95% confidence interval); n size set r, .e. number respondents; \\hat{\\sigma}_{y}^2 variance variable Y estimated sample r. (sample) variance variable Y estimated : \\hat{\\sigma}_{y}^2 = \\frac{\\sum\\limits_{\\r} w_i \\left(y_i - \\bar{y}\\right)^2}{\\left(\\sum\\limits_{\\r} w_i \\right)- 1} \\bar{y} estimated mean \\hat{Y}.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/Method.html","id":"proportions","dir":"Articles","previous_headings":"Mobility and Transport Survey","what":"Proportions","title":"Method","text":"y_i \\\\{0, 1\\}, example possession car, mean estimate becomes proportion estimate: p = \\frac{1}{\\sum\\limits_{\\r} w_i} \\sum_{\\r} w_i I_c : w_i weight participant ; I_c = 1 condition c true (y_i = 1), 0 otherwise (y_i = 0); r set participants. sample variance previous section becomes: \\hat{\\sigma}_{p}^2 = \\frac{\\sum\\limits_{\\r} w_i \\left(I_c - p\\right)^2}{\\left(\\sum\\limits_{\\r} w_i \\right)- 1} Noting I_c^2 = I_c \\sum\\limits_i w_i I_c = p \\sum\\limits_i w_i, nominator becomes: \\begin{aligned} \\sum\\limits_{\\r} w_i \\left(I_c - p\\right)^2 &= \\sum_i w_i \\left(I_c^2 +p^2 -2pI_c\\right) \\\\ &= \\sum_i w_i I_c + p^2 \\sum_i w_i -2p\\sum_i w_i I_c\\\\ &= p \\sum_i w_i + p^2 \\sum_i w_i - 2p^2 \\sum_i w_i\\\\ &= p \\sum_i w_i - p^2 \\sum_i w_i\\\\ &= p(1-p) \\sum_i w_i \\end{aligned} Therefore, estimated sample variance becomes: \\hat{\\sigma}_{p}^2 = \\frac{p(1-p) \\sum\\limits_{} w_i}{\\left(\\sum\\limits_{} w_i \\right)- 1} \\sum\\limits_i w_i >> 1 can approximated : \\hat{\\sigma}_{p}^2 \\approx p(1-p) confidence interval proportions therefore approximated : \\text{CI} \\approx 1.14 \\times \\sqrt{\\frac{p(1-p)}{n}} \\times \\text{qnorm}(1 - \\frac{\\alpha} 2) : \\alpha significance level; \\text{qnorm} outputs Z-score required significance level \\alpha; n size set r, .e. number respondents.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/chensus.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"chensus","text":"chensus package estimates population frequencies, means, proportions confidence intervals surveys conducted Federal Statistical Office (FSO): structural survey: Strukturerhebung (SE) / relevé structurel (RS), mobility transport survey: Mikrozensus Mobilität und Verkehr (MZMV) / Microrecensement mobilité et transports (MRMT). vignette, demonstrate main features package using built-nhanes dataset, contains subset data National Health Nutrition Examination Survey period 2015-2016 (?nhanes vignette(\"nhanes\")). structure similar FSO survey data contains strata weights columns demographic features gender household_size.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/articles/chensus.html","id":"total-estimates","dir":"Articles","previous_headings":"Structural Survery Example","what":"Total Estimates","title":"chensus","text":"Suppose want estimate population nhanes data set gender birth country. can use main analysis function se_total(): Column names can passed programmatically help rlang’s !!sym() !!!syms() function call: can also estimate population parallel multiple groups: wish estimate population combinations grouping variables including partial grouping, can use se_total_ogd(), wrapper function main se_total() function:","code":"se_total(   data = nhanes,   weight = weights,   strata = strata,   gender, birth_country ) #> # A tibble: 5 × 10 #>   gender birth_country   occ      total    vhat stand_dev      ci ci_per    ci_l #>   <chr>  <chr>         <int>      <dbl>   <dbl>     <dbl>   <dbl>  <dbl>   <dbl> #> 1 Female Missing           2     29693. 4.61e 8    21460.  4.21e4 142.   -1.24e4 #> 2 Female Other          1168  23914531. 6.54e11   808405.  1.58e6   6.63  2.23e7 #> 3 Female US             3909 137978222. 7.76e12  2785964.  5.46e6   3.96  1.33e8 #> 4 Male   Other          1068  23897302. 7.91e11   889444.  1.74e6   7.29  2.22e7 #> 5 Male   US             3824 130661296. 7.66e12  2768516.  5.43e6   4.15  1.25e8 #> # ℹ 1 more variable: ci_u <dbl> w <- \"weights\" s <- \"strata\" v <- c(\"gender\", \"birth_country\")  se_total(   data = nhanes,   strata = !!sym(s),   weight = !!sym(w),   !!!syms(v) ) #> # A tibble: 5 × 10 #>   gender birth_country   occ      total    vhat stand_dev      ci ci_per    ci_l #>   <chr>  <chr>         <int>      <dbl>   <dbl>     <dbl>   <dbl>  <dbl>   <dbl> #> 1 Female Missing           2     29693. 4.61e 8    21460.  4.21e4 142.   -1.24e4 #> 2 Female Other          1168  23914531. 6.54e11   808405.  1.58e6   6.63  2.23e7 #> 3 Female US             3909 137978222. 7.76e12  2785964.  5.46e6   3.96  1.33e8 #> 4 Male   Other          1068  23897302. 7.91e11   889444.  1.74e6   7.29  2.22e7 #> 5 Male   US             3824 130661296. 7.66e12  2768516.  5.43e6   4.15  1.25e8 #> # ℹ 1 more variable: ci_u <dbl> se_total_map(   nhanes,   weight = weights,   strata = strata,   gender, birth_country ) #> # A tibble: 5 × 10 #>   variable     value   occ  total    vhat stand_dev     ci ci_per    ci_l   ci_u #>   <chr>        <chr> <int>  <dbl>   <dbl>     <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #> 1 gender       Fema…  5079 1.62e8 7.82e12  2795884. 5.48e6   3.38  1.56e8 1.67e8 #> 2 gender       Male   4892 1.55e8 7.90e12  2810039. 5.51e6   3.56  1.49e8 1.60e8 #> 3 birth_count… Miss…     2 2.97e4 4.61e 8    21460. 4.21e4 142.   -1.24e4 7.18e4 #> 4 birth_count… Other  2236 4.78e7 1.30e12  1140910. 2.24e6   4.68  4.56e7 5.00e7 #> 5 birth_count… US     7733 2.69e8 1.16e13  3402537. 6.67e6   2.48  2.62e8 2.75e8 se_total_ogd(nhanes, strata = strata, weight = weights, gender, birth_country) #> # A tibble: 11 × 10 #>    gender birth_country   occ      total    vhat stand_dev     ci ci_per    ci_l #>    <fct>  <fct>         <int>      <dbl>   <dbl>     <dbl>  <dbl>  <dbl>   <dbl> #>  1 Total  Total          9971 316481044. 1.06e13  3250407. 6.37e6   2.01  3.10e8 #>  2 Female Total          5079 161922446. 7.82e12  2795884. 5.48e6   3.38  1.56e8 #>  3 Male   Total          4892 154558598. 7.90e12  2810039. 5.51e6   3.56  1.49e8 #>  4 Total  Missing           2     29693. 4.61e 8    21460. 4.21e4 142.   -1.24e4 #>  5 Total  Other          2236  47811833. 1.30e12  1140910. 2.24e6   4.68  4.56e7 #>  6 Total  US             7733 268639517. 1.16e13  3402537. 6.67e6   2.48  2.62e8 #>  7 Female Missing           2     29693. 4.61e 8    21460. 4.21e4 142.   -1.24e4 #>  8 Female Other          1168  23914531. 6.54e11   808405. 1.58e6   6.63  2.23e7 #>  9 Female US             3909 137978222. 7.76e12  2785964. 5.46e6   3.96  1.33e8 #> 10 Male   Other          1068  23897302. 7.91e11   889444. 1.74e6   7.29  2.22e7 #> 11 Male   US             3824 130661296. 7.66e12  2768516. 5.43e6   4.15  1.25e8 #> # ℹ 1 more variable: ci_u <dbl>"},{"path":"https://afds-bl.github.io/chensus/articles/chensus.html","id":"proportion-estimates","dir":"Articles","previous_headings":"Structural Survery Example","what":"Proportion Estimates","title":"chensus","text":"can also estimate proportion males females birth country nhanes survey: can display total proportion estimates single table using FSO format. FSO publication format qualifies reliability estimates hides confidential estimates (fewer five observations):","code":"se_prop(   data = nhanes,   gender,   birth_country,   weight = weights,   strata = strata ) #> # A tibble: 5 × 9 #>   gender birth_country   occ     prop    vhat stand_dev      ci     ci_l    ci_u #>   <chr>  <chr>         <int>    <dbl>   <dbl>     <dbl>   <dbl>    <dbl>   <dbl> #> 1 Female Missing           2  9.38e-5 4.60e-9 0.0000678 1.33e-4 -3.91e-5 2.27e-4 #> 2 Female Other          1168  7.56e-2 7.31e-6 0.00270   5.30e-3  7.03e-2 8.09e-2 #> 3 Female US             3909  4.36e-1 5.21e-5 0.00722   1.41e-2  4.22e-1 4.50e-1 #> 4 Male   Other          1068  7.55e-2 8.52e-6 0.00292   5.72e-3  6.98e-2 8.12e-2 #> 5 Male   US             3824  4.13e-1 5.20e-5 0.00721   1.41e-2  3.99e-1 4.27e-1 se_total_prop(   data = nhanes,   gender,   birth_country,   weight = weights,   strata = strata ) |>   fso_flag_mask() #> # A tibble: 5 × 12 #>   gender birth_country   occ      total ci_total ci_l_total ci_u_total    prop #>   <chr>  <chr>         <int>      <dbl>    <dbl>      <dbl>      <dbl>   <dbl> #> 1 Female Missing          NA        NA       NA         NA         NA  NA      #> 2 Female Other          1168  23914531. 1584444.  22330087.  25498975.  0.0756 #> 3 Female US             3909 137978222. 5460390. 132517832. 143438611.  0.436  #> 4 Male   Other          1068  23897302. 1743278.  22154024.  25640580.  0.0755 #> 5 Male   US             3824 130661296. 5426191. 125235105. 136087486.  0.413  #> # ℹ 4 more variables: ci_prop <dbl>, ci_l_prop <dbl>, ci_u_prop <dbl>, #> #   obs_status <chr>"},{"path":"https://afds-bl.github.io/chensus/articles/chensus.html","id":"mean-estimates","dir":"Articles","previous_headings":"Structural Survery Example","what":"Mean Estimates","title":"chensus","text":"hand wish estimate average household size can use function se_mean(): wrapper function se_mean_ogd() possible combinations grouping variables gender interview_lang: FSO format:","code":"se_mean(   data = nhanes,   variable = household_size,   strata = strata,   weight = weights ) #> # A tibble: 1 × 7 #>     occ household_size     vhat stand_dev     ci  ci_l  ci_u #>   <int>          <dbl>    <dbl>     <dbl>  <dbl> <dbl> <dbl> #> 1  9971           3.46 0.000495    0.0222 0.0436  3.42  3.51 se_mean_ogd(   nhanes,   variable = household_size,   strata = strata,   weight = weights,   gender, interview_lang ) #> # A tibble: 9 × 9 #>   gender interview_lang   occ household_size     vhat stand_dev     ci  ci_l #>   <fct>  <fct>          <int>          <dbl>    <dbl>     <dbl>  <dbl> <dbl> #> 1 Total  Total           9971           3.46 0.000495    0.0222 0.0436  3.42 #> 2 Female Total           5079           3.44 0.000973    0.0312 0.0611  3.38 #> 3 Male   Total           4892           3.49 0.00100     0.0317 0.0621  3.43 #> 4 Total  English         8584           3.38 0.000535    0.0231 0.0453  3.33 #> 5 Total  Spanish         1387           4.60 0.00239     0.0489 0.0959  4.50 #> 6 Female English         4345           3.36 0.00105     0.0325 0.0636  3.29 #> 7 Female Spanish          734           4.56 0.00433     0.0658 0.129   4.43 #> 8 Male   English         4239           3.40 0.00108     0.0329 0.0645  3.33 #> 9 Male   Spanish          653           4.63 0.00505     0.0711 0.139   4.49 #> # ℹ 1 more variable: ci_u <dbl> nhanes |>   se_mean_ogd(     variable = household_size,     gender, birth_country,     strata = strata,     weight = weights,   ) |>   fso_flag_mask(lang = \"en\") # Default is \"de\", further possibilities: \"fr\", \"it\" #> # A tibble: 11 × 10 #>    gender birth_country   occ household_size      vhat stand_dev      ci  ci_l #>    <fct>  <fct>         <int>          <dbl>     <dbl>     <dbl>   <dbl> <dbl> #>  1 Total  Total          9971           3.46  0.000495    0.0222  0.0436  3.42 #>  2 Female Total          5079           3.44  0.000973    0.0312  0.0611  3.38 #>  3 Male   Total          4892           3.49  0.00100     0.0317  0.0621  3.43 #>  4 Total  US             7733           3.40  0.000611    0.0247  0.0485  3.35 #>  5 Total  Other          2236           3.85  0.00184     0.0429  0.0840  3.77 #>  6 Total  Missing          NA          NA    NA          NA      NA      NA    #>  7 Female US             3909           3.36  0.00120     0.0346  0.0678  3.30 #>  8 Female Other          1168           3.88  0.00337     0.0580  0.114   3.77 #>  9 Female Missing          NA          NA    NA          NA      NA      NA    #> 10 Male   US             3824           3.43  0.00124     0.0353  0.0691  3.36 #> 11 Male   Other          1068           3.83  0.00391     0.0626  0.123   3.70 #> # ℹ 2 more variables: ci_u <dbl>, obs_status <chr>"},{"path":"https://afds-bl.github.io/chensus/articles/chensus.html","id":"mobility-survey-example","dir":"Articles","previous_headings":"","what":"Mobility Survey Example","title":"chensus","text":"want estimate mean household income can use mzmv_mean(): grouped gender (note variable argument must quoted ):","code":"mzmv_mean(   data = nhanes,   variable = annual_household_income,   weight = weights ) #> # A tibble: 1 × 4 #>   variable                  occ wmean    ci #>   <chr>                   <int> <dbl> <dbl> #> 1 annual_household_income  9626  11.9 0.240 mzmv_mean_map(   data = nhanes,   variable = \"annual_household_income\",   gender,   weight = weights ) #> # A tibble: 2 × 6 #>   variable                group_vars group_vars_value   occ wmean    ci #>   <chr>                   <chr>      <fct>            <int> <dbl> <dbl> #> 1 annual_household_income gender     Female            4906  11.8 0.350 #> 2 annual_household_income gender     Male              4720  12.0 0.328"},{"path":"https://afds-bl.github.io/chensus/articles/chensus.html","id":"flagging-estimate-reliability","dir":"Articles","previous_headings":"","what":"Flagging Estimate Reliability","title":"chensus","text":"fso_flag_mask applies FSO’s reliability rules survey estimates, based number observations (occ). flags low reliability estimates masks sample size small (occ <= 4) follows:","code":"results <- nhanes |>   se_total(     strata = strata,     weight = weights,     gender,     birth_country,     interview_lang,     edu_level   ) results |>   filter(occ < 60) |>   fso_flag_mask() |>   select(gender, birth_country, interview_lang, occ, total, ci, obs_status) #> # A tibble: 26 × 7 #>    gender birth_country interview_lang   occ    total      ci obs_status         #>    <chr>  <chr>         <chr>          <int>    <dbl>   <dbl> <chr>              #>  1 Female Missing       English           NA      NA      NA  Kein Schätzwert (… #>  2 Female Missing       Spanish           NA      NA      NA  Kein Schätzwert (… #>  3 Female Other         English           57 1098021. 301680. Schätzwert verläs… #>  4 Female Other         English           41  883410. 287543. Schätzwert beding… #>  5 Female Other         Spanish           45  673772. 217372. Schätzwert beding… #>  6 Female Other         Spanish           NA      NA      NA  Kein Schätzwert (… #>  7 Female Other         Spanish           18  310672. 154623. Schätzwert beding… #>  8 Female US            English           14  403508. 277121. Schätzwert beding… #>  9 Female US            Spanish           21  258146. 114605. Schätzwert beding… #> 10 Female US            Spanish           13  208119. 116775. Schätzwert beding… #> # ℹ 16 more rows"},{"path":"https://afds-bl.github.io/chensus/articles/nhanes.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"NHANES Survey Data","text":"raw NHANES data downloaded SAS transport format (.xpt) processed using R, following key steps: Reading demographic file (DEMO_I.xpt) using haven package. Selecting renaming key demographic variables (e.g., gender, age, education, income) survey design variables (strata, weights, PSU). Recoding categorical variables using external code files clarity (e.g., marital status, education level). Labelling missing values infrequent categories appropriately. Saving processed data frame nhanes, loaded package easy access.","code":""},{"path":"https://afds-bl.github.io/chensus/articles/nhanes.html","id":"data-structure","dir":"Articles","previous_headings":"","what":"Data Structure","title":"NHANES Survey Data","text":"included nhanes data frame contains 9,971 participants 13 variables. summary variables:","code":""},{"path":"https://afds-bl.github.io/chensus/articles/nhanes.html","id":"example-usage","dir":"Articles","previous_headings":"","what":"Example Usage","title":"NHANES Survey Data","text":"","code":"library(chensus) library(dplyr) # View the structure of the data glimpse(nhanes) #> Rows: 9,971 #> Columns: 13 #> $ PSU                     <dbl> 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1… #> $ weights                 <dbl> 134671.370, 24328.560, 12400.009, 102717.996, … #> $ strata                  <dbl> 125, 125, 131, 131, 126, 128, 120, 124, 119, 1… #> $ gender                  <fct> Male, Male, Male, Female, Female, Female, Fema… #> $ age                     <dbl> 62, 53, 78, 56, 42, 72, 11, 4, 1, 22, 32, 18, … #> $ birth_country           <fct> US, Other, US, US, US, Other, US, US, US, US, … #> $ marital_status          <fct> Married, Divorced, Married, Living with partne… #> $ interview_lang          <fct> English, English, English, English, English, S… #> $ edu_level               <fct> College graduate or above, High School, High S… #> $ household_size          <dbl> 2, 1, 2, 1, 5, 5, 5, 5, 7, 3, 4, 3, 1, 3, 4, 2… #> $ family_size             <dbl> 2, 1, 2, 1, 5, 5, 5, 5, 7, 3, 4, 3, 1, 3, 4, 2… #> $ annual_household_income <dbl> 10, 4, 5, 10, 7, 14, 6, 15, 77, 7, 6, 15, 3, 4… #> $ annual_family_income    <dbl> 10, 4, 5, 10, 7, 14, 6, 15, 77, 7, 6, 15, 3, 4…  # Count participants by education level nhanes |>   count(edu_level) #> # A tibble: 7 × 2 #>   edu_level                     n #>   <fct>                     <int> #> 1 College degree             2908 #> 2 College graduate or above  2331 #> 3 High School                2015 #> 4 9-11th Grade               1200 #> 5 Less Than 9th Grade        1087 #> 6 Missing                     396 #> 7 Don't Know                   34"},{"path":"https://afds-bl.github.io/chensus/articles/nhanes.html","id":"best-practices-and-references","dir":"Articles","previous_headings":"","what":"Best Practices and References","title":"NHANES Survey Data","text":"research: Always download latest, official data directly NHANES website. Documentation: Refer official NHANES codebooks detailed variable definitions survey methodology. Acknowledgement: Data obtained National Health Nutrition Examination Survey (NHANES), conducted National Center Health Statistics (NCHS), Centers Disease Control Prevention (CDC).","code":""},{"path":"https://afds-bl.github.io/chensus/articles/nhanes.html","id":"further-information","dir":"Articles","previous_headings":"","what":"Further Information","title":"NHANES Survey Data","text":"NHANES main website NHANES 2015–2016 Data Page Note: vignette intended ensure transparency proper attribution use NHANES data package. Always consult official NHANES documentation authoritative guidance.","code":""},{"path":"https://afds-bl.github.io/chensus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Souad Guemghar. Author, maintainer. Amt für Daten und Statistik, Basel-Landschaft. Copyright holder, funder.","code":""},{"path":"https://afds-bl.github.io/chensus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guemghar, S. (2025). chensus: Estimate Totals, Means, Proportions Confidence Intervals Federal Statistic Office's Surveys. R package version 2.0.0. Amt für Daten und Statistik, Basel-Landschaft. https://github.com/afds-bl/chensus","code":"@Manual{,   title = {{chensus}: Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys},   author = {{Guemghar} and {S.}},   organization = {Amt für Daten und Statistik, Basel-Landschaft},   note = {R package version 2.0.0},   year = {2025},   url = {https://github.com/afds-bl/chensus}, }"},{"path":"https://afds-bl.github.io/chensus/index.html","id":"chensus-","dir":"","previous_headings":"","what":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"chensus R package estimating populations surveys conducted Swiss Federal Statistical Office (FSO), specifically: structural survey: Strukturerhebung (SE) / relevé structurel (RS), mobility transport survey: Mikrozensus Mobilität und Verkehr (MZMV) / Microrecensement mobilité et transports (MRMT). implements closed-form formulas confidence intervals described FSO’s methodological reports structural survey mobility transport survey. mathematical details, see Method vignette.","code":""},{"path":"https://afds-bl.github.io/chensus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"can install development version GitHub :","code":"remotes::install_github(\"afds-bl/chensus\")"},{"path":[]},{"path":"https://afds-bl.github.io/chensus/index.html","id":"structural-survey","dir":"","previous_headings":"Usage","what":"Structural survey","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"Estimate total population: Estimate average household size (numeric variable): Estimate population proportions gender (categorical variable):","code":"library(chensus)  se_total(   data = nhanes,   weight = weights,   strata = strata ) # A tibble: 1 × 8     occ      total    vhat stand_dev       ci ci_per       ci_l       ci_u   <int>      <dbl>   <dbl>     <dbl>    <dbl>  <dbl>      <dbl>      <dbl> 1  9971 316481044. 1.06e13  3250407. 6370681.   2.01 310110363. 322851725. se_mean(   data = nhanes,   variable = household_size,   weight = weights,   strata = strata ) # A tibble: 1 × 7     occ household_size     vhat stand_dev     ci  ci_l  ci_u   <int>          <dbl>    <dbl>     <dbl>  <dbl> <dbl> <dbl> 1  9971           3.46 0.000495    0.0222 0.0436  3.42  3.51 se_prop(   data = nhanes,   gender,   weight = weights,   strata = strata ) # A tibble: 2 × 8   gender   occ  prop      vhat stand_dev     ci  ci_l  ci_u   <chr>  <int> <dbl>     <dbl>     <dbl>  <dbl> <dbl> <dbl> 1 Female  5079 0.512 0.0000521   0.00722 0.0141 0.497 0.526 2 Male    4892 0.488 0.0000521   0.00722 0.0141 0.474 0.503"},{"path":"https://afds-bl.github.io/chensus/index.html","id":"mobility-and-transport-survey","dir":"","previous_headings":"Usage","what":"Mobility and Transport Survey","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"Estimate average annual household family incomes: Estimate average annual household family incomes gender:","code":"mzmv_mean(   data = nhanes,   annual_household_income, annual_family_income,   weight = weights ) # A tibble: 2 × 4   variable                  occ wmean    ci   <chr>                   <int> <dbl> <dbl> 1 annual_household_income  9626  11.9 0.240 2 annual_family_income     9642  11.5 0.245 mzmv_mean_map(   data = nhanes,   variable = c(\"annual_household_income\", \"annual_family_income\"),   gender,   weight = weights ) # A tibble: 4 × 6   variable                group_vars group_vars_value   occ wmean    ci   <chr>                   <chr>      <fct>            <int> <dbl> <dbl> 1 annual_household_income gender     Female            4906  11.8 0.350 2 annual_household_income gender     Male              4720  12.0 0.328 3 annual_family_income    gender     Female            4917  11.5 0.358 4 annual_family_income    gender     Male              4725  11.6 0.334"},{"path":"https://afds-bl.github.io/chensus/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"package includes following vignettes: chensus gives detailed examples use package. Method details mathematical background confidence interval estimates. nhanes inspects example data set.","code":""},{"path":"https://afds-bl.github.io/chensus/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"Distributed GPL-3 License. See LICENSE information.","code":""},{"path":"https://afds-bl.github.io/chensus/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"Souad Guemghar Amt für Daten und Statistik, Basel-Landschaft.","code":""},{"path":"https://afds-bl.github.io/chensus/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"package extension vhatbfs Sandro Burri, estimates confidence intervals totals structural survey. Many thanks Sandro foundational work support. package uses data derived National Health Nutrition Examination Survey (NHANES), provided CDC/NCHS available https://www.cdc.gov/nchs/nhanes/. Data adapted educational demonstration purposes suitable research unless downloaded directly official source.","code":""},{"path":"https://afds-bl.github.io/chensus/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"","code":"utils::citation(\"chensus\") To cite 'chensus' in publications, please use:    Guemghar, S. (2025). chensus: Estimate Totals, Means, Proportions and   Confidence Intervals of the Federal Statistic Office's Surveys. R   package version 1.0.0. Amt für Daten und Statistik, Basel-Landschaft.   https://github.com/afds-bl/chensus  A BibTeX entry for LaTeX users is    @Manual{,     title = {{chensus}: Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys},     author = {{Guemghar} and {S.}},     organization = {Amt für Daten und Statistik, Basel-Landschaft},     note = {R package version 1.0.0},     year = {2025},     url = {https://github.com/afds-bl/chensus},   }"},{"path":"https://afds-bl.github.io/chensus/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys","text":"chensus project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/chensus-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in chensus — chensus-deprecated","title":"Deprecated functions in chensus — chensus-deprecated","text":"functions provided compatibility older versions `chensus`. may removed future release.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/chensus-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in chensus — chensus-deprecated","text":"","code":"se_estimate_total(...)  se_estimate_mean(...)  mzmv_estimate_mean(...)  mzmv_estimate_mean_map(...)"},{"path":"https://afds-bl.github.io/chensus/reference/chensus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"chensus: Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys — chensus-package","title":"chensus: Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys — chensus-package","text":"Estimates population totals, means, proportions confidence intervals Federal Statistic Office's (FSO) structural mobility surveys. Give data \"Strukturerhebung\" / \"relevé structurel\" \"Mikrozensus für Mobilität und Verkehr\" / \"Microrecensement mobilité et transports\", obtain estimates totals, means, proportions confidence intervals.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/chensus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"chensus: Estimate Totals, Means, Proportions and Confidence Intervals of the Federal Statistic Office's Surveys — chensus-package","text":"Maintainer: Souad Guemghar souad.guemghar@bl.ch contributors: Amt für Daten und Statistik, Basel-Landschaft [copyright holder, funder]","code":""},{"path":"https://afds-bl.github.io/chensus/reference/fso_flag_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify Estimate Reliability and Apply Confidentiality Masking — fso_flag_mask","title":"Classify Estimate Reliability and Apply Confidentiality Masking — fso_flag_mask","text":"fso_flag_mask applies Swiss Federal Statistical Office (FSO) reliability rules survey estimates, based number observations (occ). flags low reliability estimates masks sample size small (occ <= 4).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/fso_flag_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify Estimate Reliability and Apply Confidentiality Masking — fso_flag_mask","text":"","code":"fso_flag_mask(data, lang = c(\"de\", \"fr\", \"it\", \"en\"))"},{"path":"https://afds-bl.github.io/chensus/reference/fso_flag_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify Estimate Reliability and Apply Confidentiality Masking — fso_flag_mask","text":"data data frame tibble. lang character string language estimate reliability description, one \"de\", \"fr\", \"\", \"en\". Defaults German omitted.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/fso_flag_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify Estimate Reliability and Apply Confidentiality Masking — fso_flag_mask","text":"tibble containing original data masked estimates occ <= 4 one additional column: obs_status characater column classifying reliability estimates.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/fso_flag_mask.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify Estimate Reliability and Apply Confidentiality Masking — fso_flag_mask","text":"FSO estimate reliability criteria: occ <= 4: estimate (confidential). occ <= 49: Estimate low reliability. occ > 49: Reliable estimate.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/fso_flag_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify Estimate Reliability and Apply Confidentiality Masking — fso_flag_mask","text":"","code":"df <- data.frame(occ = c(3, 10, 60), mean_income = c(4000, 4200, 4500)) fso_flag_mask(df) #>   occ mean_income                     obs_status #> 1  NA          NA  Kein Schätzwert (vertraulich) #> 2  10        4200 Schätzwert bedingt verlässlich #> 3  60        4500         Schätzwert verlässlich"},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Means of Mobility Survey — mzmv_mean","title":"Estimate Means of Mobility Survey — mzmv_mean","text":"mzmv_mean() estimates means, proportions confidence intervals FSO mobility surveys.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Means of Mobility Survey — mzmv_mean","text":"","code":"mzmv_mean(data, ..., weight, cf = 1.14, alpha = 0.1)"},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Means of Mobility Survey — mzmv_mean","text":"data data frame tibble. ... Names variables estimated. Can passed unquoted (e.g., household_size) programmatically using !!!syms(c(\"annual_household_income\", \"household_size\")). Variables integer values, representing quantity (number cars per household) presence/absence (possession car). Negative numbers represent NA. weight Unquoted quoted name sampling weights column. programmatic use string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. cf Numeric correction factor confidence interval, supplied FSO. Default 1.14. alpha Numeric significance level confidence intervals. Default 0.1 (90% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Means of Mobility Survey — mzmv_mean","text":"Tibble (number rows length variable) following columns: id: estimated item occ: number survey responses wmean: weighted mean estimate ci: confidence interval estimate","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Means of Mobility Survey — mzmv_mean","text":"","code":"# Estimate two means mzmv_mean(   data = nhanes,   annual_household_income, annual_family_income,   weight = weights ) #> # A tibble: 2 × 4 #>   variable                  occ wmean    ci #>   <chr>                   <int> <dbl> <dbl> #> 1 annual_household_income  9626  11.9 0.240 #> 2 annual_family_income     9642  11.5 0.245 # Programmatic use with strings v <- c(\"annual_household_income\", \"annual_family_income\") mzmv_mean(nhanes, weight = \"weights\", !!!rlang::syms(v)) #> # A tibble: 2 × 4 #>   variable                  occ wmean    ci #>   <chr>                   <int> <dbl> <dbl> #> 1 annual_household_income  9626  11.9 0.240 #> 2 annual_family_income     9642  11.5 0.245"},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Means in Parallel for Multiple Grouping Variables in Mobility Survey — mzmv_mean_map","title":"Estimate Means in Parallel for Multiple Grouping Variables in Mobility Survey — mzmv_mean_map","text":"mzmv_mean_map() estimates weighted means confidence intervals set features mobility survey, optionally grouped one variables.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Means in Parallel for Multiple Grouping Variables in Mobility Survey — mzmv_mean_map","text":"","code":"mzmv_mean_map(data, variable, ..., weight, cf = 1.14, alpha = 0.1)"},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Means in Parallel for Multiple Grouping Variables in Mobility Survey — mzmv_mean_map","text":"data data frame tibble. variable Character vector variable names estimated. Must quoted (e.g., \"annual_family_income\"). multiple variables, pass vector (e.g., c(\"annual_family_income\", \"annual_household_income\")). support bare (unquoted) variable names. ... Grouping variables. Can passed unquoted (e.g., gender, birth_country) quoted (e.g., \"gender\", \"birth_country\"). omitted, results aggregated across whole dataset. weight Unquoted quoted name sampling weights column (must exist data). programmatic use string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. cf Numeric correction factor confidence interval. Default 1.14. alpha Numeric significance level confidence intervals. Default 0.1 (90% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Means in Parallel for Multiple Grouping Variables in Mobility Survey — mzmv_mean_map","text":"tibble columns: variable Name estimated variable. group_vars Name grouping variable. group_vars_value Value grouping variable. occ Number cases observations. wmean Weighted mean. ci Confidence interval.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/mzmv_mean_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Means in Parallel for Multiple Grouping Variables in Mobility Survey — mzmv_mean_map","text":"","code":"# Multiple quoted variables mzmv_mean_map(   nhanes,   variable = c(\"annual_family_income\", \"annual_household_income\"),   gender,   birth_country,   weight = weights ) #> # A tibble: 10 × 6 #>    variable                group_vars    group_vars_value   occ wmean     ci #>    <chr>                   <chr>         <fct>            <int> <dbl>  <dbl> #>  1 annual_family_income    gender        Female            4917  11.5  0.358 #>  2 annual_family_income    gender        Male              4725  11.6  0.334 #>  3 annual_family_income    birth_country US                7517  11.3  0.251 #>  4 annual_family_income    birth_country Other             2123  12.8  0.744 #>  5 annual_family_income    birth_country Missing              2  47.8 48.0   #>  6 annual_household_income gender        Female            4906  11.8  0.350 #>  7 annual_household_income gender        Male              4720  12.0  0.328 #>  8 annual_household_income birth_country US                7504  11.6  0.243 #>  9 annual_household_income birth_country Other             2120  13.3  0.747 #> 10 annual_household_income birth_country Missing              2  47.8 48.0   # No grouping variables mzmv_mean_map(   nhanes,   variable = \"annual_family_income\",   weight = weights ) #> # A tibble: 1 × 6 #>   variable             group_vars   group_vars_value   occ wmean    ci #>   <chr>                <chr>        <chr>            <int> <dbl> <dbl> #> 1 annual_family_income .dummy_group all               9642  11.5 0.245 # Programmatic use wt <- \"weights\" mzmv_mean_map(   nhanes,   variable = \"annual_family_income\",   gender,   birth_country,   weight = !!rlang::sym(wt) ) #> # A tibble: 5 × 6 #>   variable             group_vars    group_vars_value   occ wmean     ci #>   <chr>                <chr>         <fct>            <int> <dbl>  <dbl> #> 1 annual_family_income gender        Female            4917  11.5  0.358 #> 2 annual_family_income gender        Male              4725  11.6  0.334 #> 3 annual_family_income birth_country US                7517  11.3  0.251 #> 4 annual_family_income birth_country Other             2123  12.8  0.744 #> 5 annual_family_income birth_country Missing              2  47.8 48.0"},{"path":"https://afds-bl.github.io/chensus/reference/nhanes.html","id":null,"dir":"Reference","previous_headings":"","what":"National Health and Nutrition Examination Survey (NHANES) — nhanes","title":"National Health and Nutrition Examination Survey (NHANES) — nhanes","text":"Demographic survey data NHANES 2015 2016, data 9971 participants, including sampling weights.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/nhanes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"National Health and Nutrition Examination Survey (NHANES) — nhanes","text":"","code":"nhanes"},{"path":"https://afds-bl.github.io/chensus/reference/nhanes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"National Health and Nutrition Examination Survey (NHANES) — nhanes","text":"data frame 9971 rows 13 variables: PSU SDMVPSU - Masked variance pseudo-PSU weights WTINT2YR - Full sample 2 year interview weight strata SDMVSTRA - Masked variance pseudo-stratum gender RIAGENDR - Gender age RIDAGEYR - Age years screening birth_country DMDBORN4 - Country birth marital_status DMDMARTL - Marital status interview_lang SIALANG - Language interview edu_level DMDHREDU - Household reference person's education level household_size DMDHHSIZ - Total number people Household family_size DMDFMSIZ - Total number people Family annual_household_income INDHHIN2 - Annual household income annual_family_income INDFMIN2 - Annual family income","code":""},{"path":"https://afds-bl.github.io/chensus/reference/nhanes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"National Health and Nutrition Examination Survey (NHANES) — nhanes","text":"NHANES 2015-2016","code":""},{"path":"https://afds-bl.github.io/chensus/reference/nhanes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"National Health and Nutrition Examination Survey (NHANES) — nhanes","text":"data sets provided package derived NHANES database adapted educational purposes. , suitable use research database. research purposes, download original data files NHANES website follow analysis instructions given .","code":""},{"path":"https://afds-bl.github.io/chensus/reference/nhanes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"National Health and Nutrition Examination Survey (NHANES) — nhanes","text":"CDC","code":""},{"path":"https://afds-bl.github.io/chensus/reference/nhanes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"National Health and Nutrition Examination Survey (NHANES) — nhanes","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union glimpse(nhanes) #> Rows: 9,971 #> Columns: 13 #> $ PSU                     <dbl> 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1… #> $ weights                 <dbl> 134671.370, 24328.560, 12400.009, 102717.996, … #> $ strata                  <dbl> 125, 125, 131, 131, 126, 128, 120, 124, 119, 1… #> $ gender                  <fct> Male, Male, Male, Female, Female, Female, Fema… #> $ age                     <dbl> 62, 53, 78, 56, 42, 72, 11, 4, 1, 22, 32, 18, … #> $ birth_country           <fct> US, Other, US, US, US, Other, US, US, US, US, … #> $ marital_status          <fct> Married, Divorced, Married, Living with partne… #> $ interview_lang          <fct> English, English, English, English, English, S… #> $ edu_level               <fct> College graduate or above, High School, High S… #> $ household_size          <dbl> 2, 1, 2, 1, 5, 5, 5, 5, 7, 3, 4, 3, 1, 3, 4, 2… #> $ family_size             <dbl> 2, 1, 2, 1, 5, 5, 5, 5, 7, 3, 4, 3, 1, 3, 4, 2… #> $ annual_household_income <dbl> 10, 4, 5, 10, 7, 14, 6, 15, 77, 7, 6, 15, 3, 4… #> $ annual_family_income    <dbl> 10, 4, 5, 10, 7, 14, 6, 15, 77, 7, 6, 15, 3, 4… nhanes |> dplyr::count(edu_level) #> # A tibble: 7 × 2 #>   edu_level                     n #>   <fct>                     <int> #> 1 College degree             2908 #> 2 College graduate or above  2331 #> 3 High School                2015 #> 4 9-11th Grade               1200 #> 5 Less Than 9th Grade        1087 #> 6 Missing                     396 #> 7 Don't Know                   34"},{"path":"https://afds-bl.github.io/chensus/reference/se_combn.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate All Combinations of Strings from a Character Vector — se_combn","title":"Generate All Combinations of Strings from a Character Vector — se_combn","text":"se_combn() helper function used internally create possible combinations set variables. typically used generating grouped summary tables per Open Government Data formats.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_combn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate All Combinations of Strings from a Character Vector — se_combn","text":"","code":"se_combn(vars)"},{"path":"https://afds-bl.github.io/chensus/reference/se_combn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate All Combinations of Strings from a Character Vector — se_combn","text":"vars character vector variable names.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_combn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate All Combinations of Strings from a Character Vector — se_combn","text":"list character vectors, representing unique combination input strings. list includes empty combination length 0.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_combn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate All Combinations of Strings from a Character Vector — se_combn","text":"","code":"vars <- letters[1:3] se_combn(vars) #> [[1]] #> character(0) #>  #> [[2]] #> [1] \"a\" #>  #> [[3]] #> [1] \"b\" #>  #> [[4]] #> [1] \"c\" #>  #> [[5]] #> [1] \"a\" \"b\" #>  #> [[6]] #> [1] \"a\" \"c\" #>  #> [[7]] #> [1] \"b\" \"c\" #>  #> [[8]] #> [1] \"a\" \"b\" \"c\" #>"},{"path":"https://afds-bl.github.io/chensus/reference/se_dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Joint Dummy Variables from Multiple Categorical Columns — se_dummy","title":"Create Joint Dummy Variables from Multiple Categorical Columns — se_dummy","text":"se_dummy internal helper function used generate dummy (0/1) variables based combinations multiple categorical variables. primarily used se_prop() support grouped dummy encoding.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Joint Dummy Variables from Multiple Categorical Columns — se_dummy","text":"","code":"se_dummy(data, ..., sep = \"_\")"},{"path":"https://afds-bl.github.io/chensus/reference/se_dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Joint Dummy Variables from Multiple Categorical Columns — se_dummy","text":"data data frame tibble. ... One categorical columns (unquoted quoted) whose combinations used generate joint dummy variables. sep character string separate combined category names (default \"_\").","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Joint Dummy Variables from Multiple Categorical Columns — se_dummy","text":"tibble including original data columns additional dummy columns representing unique combinations provided categorical variables.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_dummy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Joint Dummy Variables from Multiple Categorical Columns — se_dummy","text":"","code":"df <- tibble::tibble(gender = c(\"male\", \"female\"), country = c(\"US\", \"Other\")) se_dummy(df, gender, country) #> # A tibble: 2 × 4 #>   gender country joint_female_Other joint_male_US #>   <chr>  <chr>                <int>         <int> #> 1 male   US                       0             1 #> 2 female Other                    1             0"},{"path":"https://afds-bl.github.io/chensus/reference/se_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Averages of Numeric Variables in Structural Survey — se_mean","title":"Estimate Averages of Numeric Variables in Structural Survey — se_mean","text":"se_mean() estimates averages numeric variables along variance confidence intervals FSO's structural survey.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Averages of Numeric Variables in Structural Survey — se_mean","text":"","code":"se_mean(data, variable, ..., strata, weight, alpha = 0.05)"},{"path":"https://afds-bl.github.io/chensus/reference/se_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Averages of Numeric Variables in Structural Survey — se_mean","text":"data data frame tibble. variable Unquoted quoted name numeric variable whose mean estimated. Programmatic usage (e.g., using !!sym()) supported. ... Optional grouping variables. Can passed unquoted (e.g., gender, birth_country) programmatically using !!!syms(c(\"gender\", \"birth_country\")). strata Unquoted quoted name strata column. Defaults zone omitted. weight Unquoted quoted name sampling weights column. programmatic use string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. alpha Numeric significance level confidence intervals. Default 0.05 (95% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Averages of Numeric Variables in Structural Survey — se_mean","text":"tibble columns: occ Sample size (number observations) per group. <variable> Estimated mean specified numeric variable, named dynamically. vhat, stand_dev Estimated variance mean (vhat) standard deviation (stand_dev, square root variance). ci, ci_l, ci_u Confidence interval: half-width (ci), lower (ci_l) upper (ci_u) bounds.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/se_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Averages of Numeric Variables in Structural Survey — se_mean","text":"","code":"# Direct column references (unquoted) se_mean(   data = nhanes,   variable = age,   strata = strata,   weight = weights,   gender, birth_country ) #> # A tibble: 5 × 9 #>   gender birth_country   occ   age  vhat stand_dev    ci  ci_l  ci_u #>   <fct>  <fct>         <int> <dbl> <dbl>     <dbl> <dbl> <dbl> <dbl> #> 1 Female US             3909  38.0 0.230     0.480 0.940  37.1  39.0 #> 2 Female Other          1168  43.7 0.386     0.621 1.22   42.5  45.0 #> 3 Female Missing           2  30.2 0         0     0      30.2  30.2 #> 4 Male   US             3824  36.2 0.236     0.486 0.953  35.2  37.1 #> 5 Male   Other          1068  41.8 0.361     0.601 1.18   40.7  43.0  # Quoted column names se_mean(   data = nhanes,   variable = \"age\",    strata = \"strata\",    weight = \"weights\",    gender, birth_country ) #> # A tibble: 5 × 9 #>   gender birth_country   occ   age  vhat stand_dev    ci  ci_l  ci_u #>   <fct>  <fct>         <int> <dbl> <dbl>     <dbl> <dbl> <dbl> <dbl> #> 1 Female US             3909  38.0 0.230     0.480 0.940  37.1  39.0 #> 2 Female Other          1168  43.7 0.386     0.621 1.22   42.5  45.0 #> 3 Female Missing           2  30.2 0         0     0      30.2  30.2 #> 4 Male   US             3824  36.2 0.236     0.486 0.953  35.2  37.1 #> 5 Male   Other          1068  41.8 0.361     0.601 1.18   40.7  43.0  # Programmatic use with strings v <- \"age\" wt <- \"weights\" vars <- c(\"gender\", \"birth_country\") se_mean(   data = nhanes,   variable = !!rlang::sym(v),   strata = strata,   weight = !!rlang::sym(wt),   !!!rlang::syms(vars) ) #> # A tibble: 5 × 9 #>   gender birth_country   occ   age  vhat stand_dev    ci  ci_l  ci_u #>   <fct>  <fct>         <int> <dbl> <dbl>     <dbl> <dbl> <dbl> <dbl> #> 1 Female US             3909  38.0 0.230     0.480 0.940  37.1  39.0 #> 2 Female Other          1168  43.7 0.386     0.621 1.22   42.5  45.0 #> 3 Female Missing           2  30.2 0         0     0      30.2  30.2 #> 4 Male   US             3824  36.2 0.236     0.486 0.953  35.2  37.1 #> 5 Male   Other          1068  41.8 0.361     0.601 1.18   40.7  43.0"},{"path":"https://afds-bl.github.io/chensus/reference/se_mean_ogd.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Averages of Numeric Variables for All Combinations of Grouping Variables in Structural Survey — se_mean_ogd","title":"Estimate Averages of Numeric Variables for All Combinations of Grouping Variables in Structural Survey — se_mean_ogd","text":"se_mean_ogd() computes structural survey means every combination supplied grouping variables. wrapper function uses se_mean() helper function se_combn() returns combined tibble results grouping subset, including means across groups. formatting can useful Open Government Data platforms.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_mean_ogd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Averages of Numeric Variables for All Combinations of Grouping Variables in Structural Survey — se_mean_ogd","text":"","code":"se_mean_ogd(data, variable, ..., strata, weight, alpha = 0.05)"},{"path":"https://afds-bl.github.io/chensus/reference/se_mean_ogd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Averages of Numeric Variables for All Combinations of Grouping Variables in Structural Survey — se_mean_ogd","text":"data data frame tibble. variable Unquoted quoted name numeric variable whose mean estimated. Programmatic usage (e.g., using !!sym()) supported. ... Optional grouping variables. Can passed unquoted (e.g., gender, birth_country) programmatically using !!!syms(c(\"gender\", \"birth_country\")).. strata Unquoted quoted name strata column. Defaults zone omitted. weight Unquoted quoted name sampling weights column. programmatic use. string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. alpha Numeric significance level confidence intervals. Default 0.05 (95% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_mean_ogd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Averages of Numeric Variables for All Combinations of Grouping Variables in Structural Survey — se_mean_ogd","text":"tibble combining survey estimates combinations group_vars,   grouping variables converted factors \"Total\" means grouping.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/se_mean_ogd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Averages of Numeric Variables for All Combinations of Grouping Variables in Structural Survey — se_mean_ogd","text":"","code":"se_mean_ogd(   nhanes,   variable = household_size,   strata = strata,   weight = weights,   gender, interview_lang ) #> # A tibble: 9 × 9 #>   gender interview_lang   occ household_size     vhat stand_dev     ci  ci_l #>   <fct>  <fct>          <int>          <dbl>    <dbl>     <dbl>  <dbl> <dbl> #> 1 Total  Total           9971           3.46 0.000495    0.0222 0.0436  3.42 #> 2 Female Total           5079           3.44 0.000973    0.0312 0.0611  3.38 #> 3 Male   Total           4892           3.49 0.00100     0.0317 0.0621  3.43 #> 4 Total  English         8584           3.38 0.000535    0.0231 0.0453  3.33 #> 5 Total  Spanish         1387           4.60 0.00239     0.0489 0.0959  4.50 #> 6 Female English         4345           3.36 0.00105     0.0325 0.0636  3.29 #> 7 Female Spanish          734           4.56 0.00433     0.0658 0.129   4.43 #> 8 Male   English         4239           3.40 0.00108     0.0329 0.0645  3.33 #> 9 Male   Spanish          653           4.63 0.00505     0.0711 0.139   4.49 #> # ℹ 1 more variable: ci_u <dbl>"},{"path":"https://afds-bl.github.io/chensus/reference/se_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Proportions of Categorical Variables in Structural Survey — se_prop","title":"Estimate Proportions of Categorical Variables in Structural Survey — se_prop","text":"se_prop() estimates proportions confidence intervals level one multiple categorical variables FSO's structural survey, first converting columns dummy variables estimating proportions confidence intervals.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Proportions of Categorical Variables in Structural Survey — se_prop","text":"","code":"se_prop(data, ..., strata, weight, alpha = 0.05)"},{"path":"https://afds-bl.github.io/chensus/reference/se_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Proportions of Categorical Variables in Structural Survey — se_prop","text":"data data frame tibble. ... Categorical variables. Can passed unquoted (e.g., gender, birth_country) programmatically using !!!syms(c(\"gender\", \"birth_country\")). strata Unquoted quoted name strata column. Defaults zone omitted. weight Unquoted quoted name sampling weights column. programmatic use string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. alpha Numeric significance level confidence intervals. Default 0.05 (95% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Proportions of Categorical Variables in Structural Survey — se_prop","text":"tibble proportion estimates grouping column combinations, including: occ Sample size (number observations) per group. prop Estimated proportion specified categorical variable corrresponding group. vhat, stand_dev Estimated variance mean (vhat) standard deviation (stand_dev, square root variance). ci, ci_l, ci_u Confidence interval: half-width (ci), lower (ci_l) upper (ci_u) bounds.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Proportions of Categorical Variables in Structural Survey — se_prop","text":"","code":"# Direct column references (unquoted) se_prop(   data = nhanes,   interview_lang,   birth_country,   strata = strata,   weight = weights ) #> # A tibble: 6 × 9 #>   interview_lang birth_country   occ     prop    vhat stand_dev      ci     ci_l #>   <chr>          <chr>         <int>    <dbl>   <dbl>     <dbl>   <dbl>    <dbl> #> 1 English        Missing           1  5.68e-5 3.23e-9 0.0000568 1.11e-4 -5.45e-5 #> 2 English        Other          1368  1.01e-1 1.18e-5 0.00344   6.74e-3  9.39e-2 #> 3 English        US             7215  8.27e-1 1.73e-5 0.00416   8.15e-3  8.19e-1 #> 4 Spanish        Missing           1  3.70e-5 1.37e-9 0.0000370 7.25e-5 -3.55e-5 #> 5 Spanish        Other           868  5.05e-2 3.82e-6 0.00195   3.83e-3  4.66e-2 #> 6 Spanish        US              518  2.19e-2 1.11e-6 0.00106   2.07e-3  1.99e-2 #> # ℹ 1 more variable: ci_u <dbl>  # Quoted column names se_prop(   data = nhanes,   \"interview_lang\",   gender,   \"birth_country\",   strata = \"strata\",   weight = weights, ) #> # A tibble: 10 × 10 #>    interview_lang gender birth_country   occ      prop    vhat stand_dev      ci #>    <chr>          <chr>  <chr>         <int>     <dbl>   <dbl>     <dbl>   <dbl> #>  1 English        Female Missing           1 0.0000568 3.23e-9 0.0000568 1.11e-4 #>  2 English        Female Other           704 0.0514    5.67e-6 0.00238   4.67e-3 #>  3 English        Female US             3640 0.425     5.22e-5 0.00722   1.42e-2 #>  4 English        Male   Other           664 0.0492    6.35e-6 0.00252   4.94e-3 #>  5 English        Male   US             3575 0.402     5.21e-5 0.00722   1.41e-2 #>  6 Spanish        Female Missing           1 0.0000370 1.37e-9 0.0000370 7.25e-5 #>  7 Spanish        Female Other           464 0.0242    1.55e-6 0.00125   2.44e-3 #>  8 Spanish        Female US              269 0.0106    4.80e-7 0.000693  1.36e-3 #>  9 Spanish        Male   Other           404 0.0263    2.19e-6 0.00148   2.90e-3 #> 10 Spanish        Male   US              249 0.0113    6.07e-7 0.000779  1.53e-3 #> # ℹ 2 more variables: ci_l <dbl>, ci_u <dbl>  # Programmatic use with strings wt <- \"weights\" vars <- c(\"interview_lang\", \"gender\", \"birth_country\") se_prop(   data = nhanes,   strata = strata,   weight = !!rlang::sym(wt),   !!!rlang::syms(vars) ) #> # A tibble: 10 × 10 #>    interview_lang gender birth_country   occ      prop    vhat stand_dev      ci #>    <chr>          <chr>  <chr>         <int>     <dbl>   <dbl>     <dbl>   <dbl> #>  1 English        Female Missing           1 0.0000568 3.23e-9 0.0000568 1.11e-4 #>  2 English        Female Other           704 0.0514    5.67e-6 0.00238   4.67e-3 #>  3 English        Female US             3640 0.425     5.22e-5 0.00722   1.42e-2 #>  4 English        Male   Other           664 0.0492    6.35e-6 0.00252   4.94e-3 #>  5 English        Male   US             3575 0.402     5.21e-5 0.00722   1.41e-2 #>  6 Spanish        Female Missing           1 0.0000370 1.37e-9 0.0000370 7.25e-5 #>  7 Spanish        Female Other           464 0.0242    1.55e-6 0.00125   2.44e-3 #>  8 Spanish        Female US              269 0.0106    4.80e-7 0.000693  1.36e-3 #>  9 Spanish        Male   Other           404 0.0263    2.19e-6 0.00148   2.90e-3 #> 10 Spanish        Male   US              249 0.0113    6.07e-7 0.000779  1.53e-3 #> # ℹ 2 more variables: ci_l <dbl>, ci_u <dbl>"},{"path":"https://afds-bl.github.io/chensus/reference/se_summarise.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Structural Survey Data by Group — se_summarise","title":"Summarise Structural Survey Data by Group — se_summarise","text":"se_summarise() helper function se_total(). calculates survey-weighted group-level summaries adding columns number observations estimated population size per group.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_summarise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Structural Survey Data by Group — se_summarise","text":"","code":"se_summarise(data, ..., weight, mh_col = \"mh\", Nh_col = \"Nh\")"},{"path":"https://afds-bl.github.io/chensus/reference/se_summarise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Structural Survey Data by Group — se_summarise","text":"data data frame tibble. ... One grouping variables. Can passed unquoted (e.g., gender, birth_country) programmatically using !!!syms(c(\"gender\", \"birth_country\")). weight name weight column. Can passed unquoted, quoted, programmatically using !!sym(wt) wt character variable. mh_col character string specifying name column number observations (respondents) per group. Default `\"mh\"`. Nh_col character string specifying name column estimated population size per group. Default `\"Nh\"`.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_summarise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Structural Survey Data by Group — se_summarise","text":"tibble containing original data two additional columns mh_col Nh_col (specified names).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_summarise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Structural Survey Data by Group — se_summarise","text":"","code":"# One grouping variable se_summarise(nhanes, weight = weights, strata) #> # A tibble: 9,971 × 15 #>      PSU weights strata gender   age birth_country marital_status interview_lang #>    <dbl>   <dbl>  <dbl> <fct>  <dbl> <fct>         <fct>          <fct>          #>  1     1 134671.    125 Male      62 US            Married        English        #>  2     1  24329.    125 Male      53 Other         Divorced       English        #>  3     1  12400.    131 Male      78 US            Married        English        #>  4     1 102718.    131 Female    56 US            Living with p… English        #>  5     2  17628.    126 Female    42 US            Divorced       English        #>  6     1  11252.    128 Female    72 Other         Separated      Spanish        #>  7     1   9965.    120 Female    11 US            Missing        English        #>  8     2  44750.    124 Male       4 US            Missing        English        #>  9     1   9892.    119 Male       1 US            Missing        English        #> 10     2  37043.    128 Male      22 US            Never married  English        #> # ℹ 9,961 more rows #> # ℹ 7 more variables: edu_level <fct>, household_size <dbl>, family_size <dbl>, #> #   annual_household_income <dbl>, annual_family_income <dbl>, mh <int>, #> #   Nh <dbl> # Two grouping variables se_summarise(nhanes,   weight = weights,   mh_col = \"mhc\",   Nh_col = \"Nhc\",   strata, gender ) #> # A tibble: 9,971 × 15 #>      PSU weights strata gender   age birth_country marital_status interview_lang #>    <dbl>   <dbl>  <dbl> <fct>  <dbl> <fct>         <fct>          <fct>          #>  1     1 134671.    125 Male      62 US            Married        English        #>  2     1  24329.    125 Male      53 Other         Divorced       English        #>  3     1  12400.    131 Male      78 US            Married        English        #>  4     1 102718.    131 Female    56 US            Living with p… English        #>  5     2  17628.    126 Female    42 US            Divorced       English        #>  6     1  11252.    128 Female    72 Other         Separated      Spanish        #>  7     1   9965.    120 Female    11 US            Missing        English        #>  8     2  44750.    124 Male       4 US            Missing        English        #>  9     1   9892.    119 Male       1 US            Missing        English        #> 10     2  37043.    128 Male      22 US            Never married  English        #> # ℹ 9,961 more rows #> # ℹ 7 more variables: edu_level <fct>, household_size <dbl>, family_size <dbl>, #> #   annual_household_income <dbl>, annual_family_income <dbl>, mhc <int>, #> #   Nhc <dbl>"},{"path":"https://afds-bl.github.io/chensus/reference/se_total.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Totals of Structural Survey — se_total","title":"Estimate Totals of Structural Survey — se_total","text":"se_total() estimates totals  confidence intervals FSO structural surveys.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Totals of Structural Survey — se_total","text":"","code":"se_total(data, ..., strata, weight, alpha = 0.05)"},{"path":"https://afds-bl.github.io/chensus/reference/se_total.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Totals of Structural Survey — se_total","text":"data data frame tibble. ... Optional grouping variables. Can passed unquoted (e.g., gender, birth_country) programmatically using !!!syms(c(\"gender\", \"birth_country\")). strata Unquoted quoted name strata column. Defaults zone omitted. weight Unquoted quoted name sampling weights column. programmatic use string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. alpha Numeric significance level confidence intervals. Default 0.05 (95% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Totals of Structural Survey — se_total","text":"tibble total estimates grouping column combinations, including: <variable> Value grouping variables passed .... occ number observations survey sample. total population estimate. vhat, stand_dev Estimated variance total (vhat) standard deviation (stand_dev, square root variance). ci, ci_per, ci_l, ci_u Confidence interval:  half-width (ci), percentage total (ci_per), lower (ci_l) upper (ci_u) bounds.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Totals of Structural Survey — se_total","text":"condition argument deprecated longer supported. Please use ... pass grouping variables either unquoted programmatically using rlang: * Interactive use: se_total(data, weight = my_weight, group1, group2) * Programmatic use: weight_var <- \"my_weight\" group_vars <- c(\"group1\", \"group2\") se_total(data, weight = !!rlang::sym(weight_var), !!!rlang::syms(group_vars))","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/se_total.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Totals of Structural Survey — se_total","text":"","code":"# One grouping variable se_total(   data = nhanes,   strata = strata,   weight = weights,   gender ) #> # A tibble: 2 × 9 #>   gender   occ      total    vhat stand_dev       ci ci_per       ci_l      ci_u #>   <chr>  <int>      <dbl>   <dbl>     <dbl>    <dbl>  <dbl>      <dbl>     <dbl> #> 1 Female  5079 161922446. 7.82e12  2795884. 5479833.   3.38 156442613.    1.67e8 #> 2 Male    4892 154558598. 7.90e12  2810039. 5507576.   3.56 149051022.    1.60e8 # Multiple grouping variables se_total(   data = nhanes,   strata = strata,   weight = weights,   gender, marital_status, birth_country ) #> # A tibble: 33 × 11 #>    gender marital_status     birth_country   occ  total    vhat stand_dev     ci #>    <chr>  <chr>              <chr>         <int>  <dbl>   <dbl>     <dbl>  <dbl> #>  1 Female Divorced           Other           108 2.25e6 7.81e10   279466. 5.48e5 #>  2 Female Divorced           US              260 1.16e7 8.98e11   947386. 1.86e6 #>  3 Female Don't Know         US                1 5.94e4 3.53e 9    59381. 1.16e5 #>  4 Female Living with partn… Missing           1 1.17e4 1.37e 8    11709. 2.29e4 #>  5 Female Living with partn… Other            87 1.97e6 5.26e10   229323. 4.49e5 #>  6 Female Living with partn… US              183 8.95e6 6.52e11   807522. 1.58e6 #>  7 Female Married            Other           562 1.22e7 3.56e11   596967. 1.17e6 #>  8 Female Married            US              796 5.02e7 4.82e12  2196586. 4.31e6 #>  9 Female Missing            Missing           1 1.80e4 3.23e 8    17984. 3.52e4 #> 10 Female Missing            Other           137 1.97e6 3.52e10   187669. 3.68e5 #> # ℹ 23 more rows #> # ℹ 3 more variables: ci_per <dbl>, ci_l <dbl>, ci_u <dbl> # Programmatic use and quoted variables v <- c(\"gender\", \"marital_status\", \"birth_country\") se_total(   nhanes,   weight = \"weights\",   strata = \"strata\",   !!!rlang::syms(v) ) #> # A tibble: 33 × 11 #>    gender marital_status     birth_country   occ  total    vhat stand_dev     ci #>    <chr>  <chr>              <chr>         <int>  <dbl>   <dbl>     <dbl>  <dbl> #>  1 Female Divorced           Other           108 2.25e6 7.81e10   279466. 5.48e5 #>  2 Female Divorced           US              260 1.16e7 8.98e11   947386. 1.86e6 #>  3 Female Don't Know         US                1 5.94e4 3.53e 9    59381. 1.16e5 #>  4 Female Living with partn… Missing           1 1.17e4 1.37e 8    11709. 2.29e4 #>  5 Female Living with partn… Other            87 1.97e6 5.26e10   229323. 4.49e5 #>  6 Female Living with partn… US              183 8.95e6 6.52e11   807522. 1.58e6 #>  7 Female Married            Other           562 1.22e7 3.56e11   596967. 1.17e6 #>  8 Female Married            US              796 5.02e7 4.82e12  2196586. 4.31e6 #>  9 Female Missing            Missing           1 1.80e4 3.23e 8    17984. 3.52e4 #> 10 Female Missing            Other           137 1.97e6 3.52e10   187669. 3.68e5 #> # ℹ 23 more rows #> # ℹ 3 more variables: ci_per <dbl>, ci_l <dbl>, ci_u <dbl>"},{"path":"https://afds-bl.github.io/chensus/reference/se_total_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Totals in Parallel for Multiple Grouping Variables in Structural Survey — se_total_map","title":"Estimate Totals in Parallel for Multiple Grouping Variables in Structural Survey — se_total_map","text":"se_total_map() applies se_total() data frame several grouping variables, returning combined tibble results.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Totals in Parallel for Multiple Grouping Variables in Structural Survey — se_total_map","text":"","code":"se_total_map(data, ..., strata, weight, alpha = 0.05)"},{"path":"https://afds-bl.github.io/chensus/reference/se_total_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Totals in Parallel for Multiple Grouping Variables in Structural Survey — se_total_map","text":"data data frame tibble. ... One grouping variables. Can passed unquoted (e.g., gender, birth_country) programmatically using !!!syms(c(\"gender\", \"birth_country\")). strata Unquoted quoted name strata column. Defaults zone omitted. weight Unquoted quoted name sampling weights column. programmatic use string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. alpha Numeric significance level confidence intervals. Default 0.05 (95% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Totals in Parallel for Multiple Grouping Variables in Structural Survey — se_total_map","text":"tibble results grouping variable, including: variable name grouping variable. value value grouping variable. occ Sample size group. total Estimated total group. vhat, stand_dev Estimated variance total (vhat) standard deviation (stand_dev, square root variance). ci, ci_per, ci_l, ci_u Confidence interval:  half-width (ci), percentage total (ci_per), lower (ci_l) upper (ci_u) bounds.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Totals in Parallel for Multiple Grouping Variables in Structural Survey — se_total_map","text":"wrapper function allows efficiently compute totals confidence intervals grouping variable structural survey data parallel. function iterates grouping variable supplied via ..., applies se_total() data grouped variable, combines results single tibble. grouping variable renamed value name stored variable column clarity.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/se_total_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Totals in Parallel for Multiple Grouping Variables in Structural Survey — se_total_map","text":"","code":"# Unquoted variables se_total_map(   nhanes,   weight = weights,   strata = strata,   gender, marital_status, birth_country ) #> # A tibble: 14 × 10 #>    variable    value   occ  total    vhat stand_dev     ci ci_per    ci_l   ci_u #>    <chr>       <chr> <int>  <dbl>   <dbl>     <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 gender      Fema…  5079 1.62e8 7.82e12  2795884. 5.48e6   3.38  1.56e8 1.67e8 #>  2 gender      Male   4892 1.55e8 7.90e12  2810039. 5.51e6   3.56  1.49e8 1.60e8 #>  3 marital_st… Divo…   614 2.30e7 1.63e12  1278310. 2.51e6  10.9   2.05e7 2.55e7 #>  4 marital_st… Don'…     1 5.94e4 3.53e 9    59381. 1.16e5 196.   -5.70e4 1.76e5 #>  5 marital_st… Livi…   555 2.29e7 1.53e12  1237480. 2.43e6  10.6   2.04e7 2.53e7 #>  6 marital_st… Marr…  2886 1.27e8 9.39e12  3064624. 6.01e6   4.73  1.21e8 1.33e8 #>  7 marital_st… Miss…  4252 8.20e7 1.79e12  1337003. 2.62e6   3.20  7.94e7 8.46e7 #>  8 marital_st… Neve…  1048 4.20e7 2.64e12  1624603. 3.18e6   7.59  3.88e7 4.51e7 #>  9 marital_st… Refu…     2 3.25e4 5.86e 8    24211. 4.75e4 146.   -1.50e4 7.99e4 #> 10 marital_st… Sepa…   192 5.78e6 3.31e11   575051. 1.13e6  19.5   4.65e6 6.91e6 #> 11 marital_st… Wido…   421 1.39e7 8.24e11   907650. 1.78e6  12.8   1.22e7 1.57e7 #> 12 birth_coun… Miss…     2 2.97e4 4.61e 8    21460. 4.21e4 142.   -1.24e4 7.18e4 #> 13 birth_coun… Other  2236 4.78e7 1.30e12  1140910. 2.24e6   4.68  4.56e7 5.00e7 #> 14 birth_coun… US     7733 2.69e8 1.16e13  3402537. 6.67e6   2.48  2.62e8 2.75e8 # Programmatic use and quoted variables v <- c(\"gender\", \"marital_status\", \"birth_country\") se_total_map(   nhanes,   weight = \"weights\",   strata = \"strata\",   !!!rlang::syms(v) ) #> # A tibble: 14 × 10 #>    variable    value   occ  total    vhat stand_dev     ci ci_per    ci_l   ci_u #>    <chr>       <chr> <int>  <dbl>   <dbl>     <dbl>  <dbl>  <dbl>   <dbl>  <dbl> #>  1 gender      Fema…  5079 1.62e8 7.82e12  2795884. 5.48e6   3.38  1.56e8 1.67e8 #>  2 gender      Male   4892 1.55e8 7.90e12  2810039. 5.51e6   3.56  1.49e8 1.60e8 #>  3 marital_st… Divo…   614 2.30e7 1.63e12  1278310. 2.51e6  10.9   2.05e7 2.55e7 #>  4 marital_st… Don'…     1 5.94e4 3.53e 9    59381. 1.16e5 196.   -5.70e4 1.76e5 #>  5 marital_st… Livi…   555 2.29e7 1.53e12  1237480. 2.43e6  10.6   2.04e7 2.53e7 #>  6 marital_st… Marr…  2886 1.27e8 9.39e12  3064624. 6.01e6   4.73  1.21e8 1.33e8 #>  7 marital_st… Miss…  4252 8.20e7 1.79e12  1337003. 2.62e6   3.20  7.94e7 8.46e7 #>  8 marital_st… Neve…  1048 4.20e7 2.64e12  1624603. 3.18e6   7.59  3.88e7 4.51e7 #>  9 marital_st… Refu…     2 3.25e4 5.86e 8    24211. 4.75e4 146.   -1.50e4 7.99e4 #> 10 marital_st… Sepa…   192 5.78e6 3.31e11   575051. 1.13e6  19.5   4.65e6 6.91e6 #> 11 marital_st… Wido…   421 1.39e7 8.24e11   907650. 1.78e6  12.8   1.22e7 1.57e7 #> 12 birth_coun… Miss…     2 2.97e4 4.61e 8    21460. 4.21e4 142.   -1.24e4 7.18e4 #> 13 birth_coun… Other  2236 4.78e7 1.30e12  1140910. 2.24e6   4.68  4.56e7 5.00e7 #> 14 birth_coun… US     7733 2.69e8 1.16e13  3402537. 6.67e6   2.48  2.62e8 2.75e8"},{"path":"https://afds-bl.github.io/chensus/reference/se_total_ogd.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Totals for All Combinations of Grouping Variables in Structural Survey — se_total_ogd","title":"Estimate Totals for All Combinations of Grouping Variables in Structural Survey — se_total_ogd","text":"se_total_ogd() computes structural survey totals every combination supplied grouping variables. wrapper function uses se_total() helper function se_combn() returns combined tibble results grouping subset, including totals across groups. formatting can useful Open Government Data platforms.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total_ogd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Totals for All Combinations of Grouping Variables in Structural Survey — se_total_ogd","text":"","code":"se_total_ogd(data, ..., strata, weight, alpha = 0.05)"},{"path":"https://afds-bl.github.io/chensus/reference/se_total_ogd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Totals for All Combinations of Grouping Variables in Structural Survey — se_total_ogd","text":"data data frame tibble. ... Optional grouping variables. Can passed unquoted (e.g., gender, birth_country) programmatically using !!!syms(c(\"gender\", \"birth_country\")).. strata Unquoted quoted name strata column. Defaults zone omitted. weight Unquoted quoted name sampling weights column. programmatic use. string variable (e.g., wt <- \"weights\"), use !!sym(wt) function call. alpha Numeric significance level confidence intervals. Default 0.05 (95% CI).","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total_ogd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Totals for All Combinations of Grouping Variables in Structural Survey — se_total_ogd","text":"tibble combining survey estimates combinations group_vars,   grouping variables converted factors \"Total\" means grouping.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/se_total_ogd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Totals for All Combinations of Grouping Variables in Structural Survey — se_total_ogd","text":"","code":"# Unquoted variables se_total_ogd(nhanes, strata = strata, weight = weights, gender, birth_country) #> # A tibble: 11 × 10 #>    gender birth_country   occ      total    vhat stand_dev     ci ci_per    ci_l #>    <fct>  <fct>         <int>      <dbl>   <dbl>     <dbl>  <dbl>  <dbl>   <dbl> #>  1 Total  Total          9971 316481044. 1.06e13  3250407. 6.37e6   2.01  3.10e8 #>  2 Female Total          5079 161922446. 7.82e12  2795884. 5.48e6   3.38  1.56e8 #>  3 Male   Total          4892 154558598. 7.90e12  2810039. 5.51e6   3.56  1.49e8 #>  4 Total  Missing           2     29693. 4.61e 8    21460. 4.21e4 142.   -1.24e4 #>  5 Total  Other          2236  47811833. 1.30e12  1140910. 2.24e6   4.68  4.56e7 #>  6 Total  US             7733 268639517. 1.16e13  3402537. 6.67e6   2.48  2.62e8 #>  7 Female Missing           2     29693. 4.61e 8    21460. 4.21e4 142.   -1.24e4 #>  8 Female Other          1168  23914531. 6.54e11   808405. 1.58e6   6.63  2.23e7 #>  9 Female US             3909 137978222. 7.76e12  2785964. 5.46e6   3.96  1.33e8 #> 10 Male   Other          1068  23897302. 7.91e11   889444. 1.74e6   7.29  2.22e7 #> 11 Male   US             3824 130661296. 7.66e12  2768516. 5.43e6   4.15  1.25e8 #> # ℹ 1 more variable: ci_u <dbl>  # Programmatic use wt <- \"weights\" strata <- \"strata\" vars <- c(\"gender\", \"birth_country\")  se_total_ogd(   nhanes,   strata = \"strata\",   weight = \"weights\",   !!!rlang::syms(vars) ) #> # A tibble: 11 × 10 #>    gender birth_country   occ      total    vhat stand_dev     ci ci_per    ci_l #>    <fct>  <fct>         <int>      <dbl>   <dbl>     <dbl>  <dbl>  <dbl>   <dbl> #>  1 Total  Total          9971 316481044. 1.06e13  3250407. 6.37e6   2.01  3.10e8 #>  2 Female Total          5079 161922446. 7.82e12  2795884. 5.48e6   3.38  1.56e8 #>  3 Male   Total          4892 154558598. 7.90e12  2810039. 5.51e6   3.56  1.49e8 #>  4 Total  Missing           2     29693. 4.61e 8    21460. 4.21e4 142.   -1.24e4 #>  5 Total  Other          2236  47811833. 1.30e12  1140910. 2.24e6   4.68  4.56e7 #>  6 Total  US             7733 268639517. 1.16e13  3402537. 6.67e6   2.48  2.62e8 #>  7 Female Missing           2     29693. 4.61e 8    21460. 4.21e4 142.   -1.24e4 #>  8 Female Other          1168  23914531. 6.54e11   808405. 1.58e6   6.63  2.23e7 #>  9 Female US             3909 137978222. 7.76e12  2785964. 5.46e6   3.96  1.33e8 #> 10 Male   Other          1068  23897302. 7.91e11   889444. 1.74e6   7.29  2.22e7 #> 11 Male   US             3824 130661296. 7.66e12  2768516. 5.43e6   4.15  1.25e8 #> # ℹ 1 more variable: ci_u <dbl>"},{"path":"https://afds-bl.github.io/chensus/reference/se_total_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Table with Total and Proportion Estimates for Categorical Variables in Structural Survey — se_total_prop","title":"Create a Table with Total and Proportion Estimates for Categorical Variables in Structural Survey — se_total_prop","text":"se_total_prop wrapper function se_total() se_prop() estimates totals proportions categorical variables.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Table with Total and Proportion Estimates for Categorical Variables in Structural Survey — se_total_prop","text":"","code":"se_total_prop(data, ..., strata, weight, alpha = 0.05)"},{"path":"https://afds-bl.github.io/chensus/reference/se_total_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Table with Total and Proportion Estimates for Categorical Variables in Structural Survey — se_total_prop","text":"data data frame tibble. ... Optional grouping variables (unquoted). strata name strata variable (default \"zone\"). weight name weight variable. alpha Significance level confidence intervals. Default 0.05.","code":""},{"path":"https://afds-bl.github.io/chensus/reference/se_total_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Table with Total and Proportion Estimates for Categorical Variables in Structural Survey — se_total_prop","text":"tibble joined total proportion estimates.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/reference/se_total_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Table with Total and Proportion Estimates for Categorical Variables in Structural Survey — se_total_prop","text":"","code":"se_total_prop(   data = nhanes,   interview_lang,   gender,   birth_country,   strata = strata,   weight = weights ) #> # A tibble: 10 × 12 #>    interview_lang gender birth_country   occ      total ci_total ci_l_total #>    <chr>          <chr>  <chr>         <int>      <dbl>    <dbl>      <dbl> #>  1 English        Female Missing           1     17984.   35248.    -17263. #>  2 English        Female Other           704  16271319. 1439977.  14831343. #>  3 English        Female US             3640 134617433. 5472957. 129144476. #>  4 English        Male   Other           664  15571104. 1538821.  14032283. #>  5 English        Male   US             3575 127077535. 5433656. 121643879. #>  6 Spanish        Female Missing           1     11709.   22949.    -11240. #>  7 Spanish        Female Other           464   7643212.  740228.   6902984. #>  8 Spanish        Female US              269   3360788.  415220.   2945569. #>  9 Spanish        Male   Other           404   8326198.  889838.   7436360. #> 10 Spanish        Male   US              249   3583761.  469708.   3114053. #> # ℹ 5 more variables: ci_u_total <dbl>, prop <dbl>, ci_prop <dbl>, #> #   ci_l_prop <dbl>, ci_u_prop <dbl>"},{"path":[]},{"path":"https://afds-bl.github.io/chensus/news/index.html","id":"new-features-2-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"chensus 2.0.0.","text":"Renamed se_mean_cat() se_prop(). Renamed se_mean_num() se_mean(). Added se_total_prop() estimate totals proportions categorical variables. Added se_total_ogd() se_mean_ogd() estimate totals means, respectively, possible grouping variable combinations.","code":""},{"path":[]},{"path":"https://afds-bl.github.io/chensus/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"chensus 1.0.0","text":"Initial release chensus package.","code":""},{"path":"https://afds-bl.github.io/chensus/news/index.html","id":"changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"chensus 1.0.0","text":"Combined total proportion estimates single table using se_total_prop(). Changed se_mean_cat() se_prop(). Updated functions support tidy evaluation (unquoted arguments). Separated se_mean() two functions: se_mean_num() se_mean_cat(). Replaced condition argument ellipsis ....","code":""}]
